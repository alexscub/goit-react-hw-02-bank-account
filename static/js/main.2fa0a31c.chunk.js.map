{"version":3,"sources":["components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","Controls","initialState","amount","state","handleChange","e","setState","target","value","this","props","onDeposit","onWithdraw","className","styles","controls","form","input","type","name","onChange","button","onClick","Component","Balance","income","expenses","balance","balanceElement","role","aria-label","TransactionHistory","items","transactionsHistory","map","item","key","id","date","Dashboard","transactions","dateOptions","hour","minute","second","hour12","notify","message","toast","makeTransaction","newTransaction","Date","toLocaleDateString","shortid","generate","prev","checkAmount","getSumFromTransactions","filter","transaction","reduce","acc","curSum","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fa0a31c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionsHistory\":\"TransactionHistory_transactionsHistory__1a9Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__33utM\",\"button\":\"Controls_button__27KIt\",\"input\":\"Controls_input__2cm3S\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  initialState = {\n    amount: '',\n  };\n\n  state = {\n    ...this.initialState,\n  };\n\n  handleChange = e => {\n    this.setState({\n      amount: e.target.value,\n    });\n  };\n\n  render() {\n    const { amount } = this.state;\n    const { onDeposit, onWithdraw } = this.props;\n    const handleOnDeposit = () => {\n      onDeposit(+amount);\n      this.setState({\n        ...this.initialState,\n      });\n    };\n    const handleOnWithdraw = () => {\n      onWithdraw(+amount);\n      this.setState({\n        ...this.initialState,\n      });\n    };\n    return (\n      <section className={styles.controls}>\n        <form className={styles.form}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={handleOnDeposit}\n          >\n            Deposit\n          </button>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={handleOnWithdraw}\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\nControls.propTypes = {\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ income, expenses, balance }) => {\n  return (\n    <section className={styles.balance}>\n      <span className={styles.balanceElement}>\n        <span role=\"img\" aria-label=\"Snowman\">\n          ⬆️\n        </span>\n        {income}$\n      </span>\n      <span className={styles.balanceElement}>\n        <span role=\"img\" aria-label=\"Snowman\">\n          ⬇️\n        </span>\n        {expenses}$\n      </span>\n      <span className={styles.balanceElement}>Balance: {balance}$</span>\n    </section>\n  );\n};\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionsHistory}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.oneOf(['Deposit', 'Withdraw']).isRequired,\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  initialState = {\n    balance: 0,\n    transactions: [],\n  };\n\n  state = {\n    ...this.initialState,\n  };\n\n  dateOptions = {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false,\n  };\n\n  notify = message => toast(message);\n\n  makeTransaction = (type, amount) => {\n    const newTransaction = {\n      date: new Date().toLocaleDateString('en-US', this.dateOptions),\n      amount,\n      type,\n      id: shortid.generate(),\n    };\n    this.setState(prev => ({\n      balance: prev.balance + (type === 'Withdraw' ? -amount : amount),\n      transactions: [...prev.transactions, newTransaction],\n    }));\n  };\n\n  checkAmount = amount => {\n    if (amount < 0) {\n      this.notify('Введите положительное значение!');\n      return false;\n    }\n    if (amount === 0) {\n      this.notify('Введите сумму для проведения операции!');\n      return false;\n    }\n    return true;\n  };\n\n  onDeposit = amount => {\n    if (this.checkAmount(amount)) {\n      this.makeTransaction('Deposit', amount);\n    }\n  };\n\n  onWithdraw = amount => {\n    if (this.checkAmount(amount)) {\n      if (amount > this.state.balance) {\n        this.notify('На счету недостаточно средств для проведения операции!');\n        return;\n      }\n      this.makeTransaction('Withdraw', amount);\n    }\n  };\n\n  getSumFromTransactions = (transactions, type) =>\n    transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        let curSum = acc;\n        curSum += transaction.amount;\n        return curSum;\n      }, 0);\n\n  render() {\n    const { balance, transactions } = this.state;\n    const income = this.getSumFromTransactions(transactions, 'Deposit');\n    const expenses = this.getSumFromTransactions(transactions, 'Withdraw');\n    return (\n      <div>\n        <ToastContainer />\n        <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        {!!transactions.length && <TransactionHistory items={transactions} />}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__3nCeO\",\"balanceElement\":\"Balance_balanceElement__2bFh5\"};"],"sourceRoot":""}