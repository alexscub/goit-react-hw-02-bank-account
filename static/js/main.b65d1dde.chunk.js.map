{"version":3,"sources":["components/Dashboard/Controls/Controls.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","initialState","amount","state","handleChange","e","setState","target","value","this","props","onDeposit","onWithdraw","className","styles","controls","type","name","onChange","button","onClick","Component","Balance","income","expenses","balance","role","aria-label","TransactionHistory","items","transactionsHistory","map","item","key","id","date","Dashboard","transactions","dateOptions","hour","minute","second","hour12","notify","message","toast","makeTransaction","newTransaction","Date","toLocaleDateString","shortid","generate","prev","getSumFromTransactions","filter","transaction","reduce","acc","curSum","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b65d1dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__33utM\",\"button\":\"Controls_button__27KIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionsHistory\":\"TransactionHistory_transactionsHistory__1a9Uq\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  initialState = {\n    amount: 0,\n  };\n\n  state = {\n    ...this.initialState,\n  };\n\n  handleChange = e => {\n    this.setState({\n      amount: +e.target.value,\n    });\n  };\n\n  render() {\n    const { amount } = this.state;\n    const { onDeposit, onWithdraw } = this.props;\n    const handleOnDeposit = () => onDeposit(amount);\n    const handleOnWithdraw = () => onWithdraw(amount);\n    return (\n      <section className={styles.controls}>\n        <input type=\"number\" name=\"amount\" onChange={this.handleChange} />\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={handleOnDeposit}\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={handleOnWithdraw}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\nControls.propTypes = {\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Balance = ({ income, expenses, balance }) => {\n  return (\n    <section className=\"balance\">\n      <span role=\"img\" aria-label=\"Snowman\">\n        ⬆️\n      </span>\n      <span>{income}$</span>\n      <span role=\"img\" aria-label=\"Snowman\">\n        ⬇️\n      </span>\n      <span>{expenses}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionsHistory}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.oneOf(['Deposit', 'Withdraw']).isRequired,\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\n// import styles from './Dashboard.module.css';\n\nclass Dashboard extends Component {\n  initialState = {\n    balance: 0,\n    transactions: [],\n  };\n\n  state = {\n    ...this.initialState,\n  };\n\n  dateOptions = {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false,\n  };\n\n  notify = message => toast(message);\n\n  makeTransaction = (type, amount) => {\n    const newTransaction = {\n      date: new Date().toLocaleDateString('en-US', this.dateOptions),\n      amount,\n      type,\n      id: shortid.generate(),\n    };\n    this.setState(prev => ({\n      balance: prev.balance + amount,\n      transactions: [...prev.transactions, newTransaction],\n    }));\n  };\n\n  // checkNegativeAmount = amount => {\n  //   if (amount < 0) {\n  //     this.notify('Введите положительное значение!');\n  //   }\n  // };\n\n  onDeposit = amount => {\n    // this.checkNegativeAmount(amount);\n    if (amount < 0) {\n      this.notify('Введите положительное значение!');\n      return;\n    }\n    if (amount === 0) {\n      this.notify('Введите сумму для проведения операции!');\n      return;\n    }\n    this.makeTransaction('Deposit', amount);\n  };\n\n  onWithdraw = amount => {\n    if (amount === 0) {\n      this.notify('Введите сумму для проведения операции!');\n      return;\n    }\n    if (amount < 0) {\n      this.notify('Введите положительное значение!');\n      return;\n    }\n    if (amount > this.state.balance) {\n      this.notify('На счету недостаточно средств для проведения операции!');\n      return;\n    }\n    this.makeTransaction('Withdraw', -amount);\n  };\n\n  getSumFromTransactions = (transactions, type) =>\n    transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        let curSum = acc;\n        curSum += transaction.amount;\n        return curSum;\n      }, 0);\n\n  render() {\n    console.log(this.state);\n    const { balance, transactions } = this.state;\n    const income = this.getSumFromTransactions(transactions, 'Deposit');\n    const expenses = this.getSumFromTransactions(transactions, 'Withdraw');\n    return (\n      <div>\n        <ToastContainer />\n        <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory items={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}